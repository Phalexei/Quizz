package imag.quizz.server.game;

import imag.quizz.common.network.SocketHandler;
import imag.quizz.common.protocol.message.Message;
import imag.quizz.common.protocol.message.NewMessage;
import imag.quizz.common.protocol.message.PingMessage;
import imag.quizz.common.protocol.message.PongMessage;
import imag.quizz.server.network.ServerConnectionManager;

/**
 * Represents a Player.
 */
public final class Player extends Client {

    /**
     * The Player's login.
     */
    private String login;

    /**
     * The hashed Player's password.
     */
    private String passwordHash;

    /**
     * If this Player has logged in.
     */
    private boolean isLoggedIn;

    /**
     * Amount of Games the Player won.
     */
    private int wonGames;

    /**
     * Amount of Games the Player lost.
     */
    private int lostGames;

    /**
     * Amount of Games the Player neither won nor lost.
     */
    private int drawGames;

    public Player(ServerConnectionManager connectionManager, SocketHandler socketHandler, int id) {
        super(connectionManager, socketHandler, id);
    }

    private enum State {

    }

    @Override
    public void receive(Message message) {
        switch (message.getCommand()) {
            case PING:
                send(new PongMessage((PingMessage)message));
                break;
            case NEW:
                NewMessage newMessage = (NewMessage)message;
                Player opponent = null;
                if (newMessage.getOpponent().isEmpty()) {
                    // choose a random opponent
                } else {
                    int opponentId = Integer.parseInt(newMessage.getOpponent());
                    opponent = this.connectionManager.getPlayerById(opponentId);
                }

                if (opponent != null) {
                    Game game = new Game(this, opponent);
                }
        }
    }

    @Override
    protected void disconnected() {
        //TODO: autogenerated stub
    }

    @Override
    public Type getType() {
        return Type.PLAYER;
    }
}
